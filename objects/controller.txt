--@name Controller
--@author Tyunge [ STEAM_0:0:78909614 ]
--@shared

Controller = class("Controller")
function Controller:initialize(POD, Components)
    self.components = {Differentials = {}}
    self.pod = POD 
    
    for k, v in pairs(Components) do
        if v.class.name != "Differential" then
            self.components[v.class.name] = v
        else
            table.insert( self.components["Differentials"], v )
        end
    end
    
    self.data = {}
end

function Controller:keyPress(key)
    
    if key == 1 then
        self.components["Transmission"]:gearUp()
    end
    
    if key == 2048 then
        self.components["Transmission"]:gearDown()
    end
    
    if key == 8192 then
        //R
        self.components["Engine"]:resetSounds()
        self.components["Engine"]:toggleActive()
    end

end

function Controller:keyRelease(key)
end

function Controller:think()

    for k, v in pairs(self.components) do
        if k == "Differentials" then
            for j, i in pairs(v) do
                i:think()
            end
        else
            v:think()
        end
    end
    
    
    for k, v in pairs(self.components["Differentials"]) do
        v:setBrake( math.approach(v:getBrake(), self.pod.S, 1) )
    end
    

    if self.components["Transmission"]:changingGears() then
        self.components["Engine"]:setThrottle(0)
    else
        self.components["Engine"]:setThrottle((self.pod.W*0.75)+self.pod.Alt*0.25)
    end

    self.components["Transmission"]:setClutch( math.approach( self.components["Transmission"]:getClutch(), self.pod.Shift, 0.25 ) )


    self.data = {
        ["RPM"] = self.components["Engine"]:getRPM(),
        ["Throttle"] = self.components["Engine"]:getThrottle(),
        ["Clutch"]  = self.components["Transmission"]:getClutch(),
        ["EngineTorque"] = self.components["Engine"]:getTorque()
    }
    
    
    return self.data
end